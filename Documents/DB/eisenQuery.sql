SELECT A.MEM_NO, A.MEM_ID, A.MEM_NICK, A.MEM_TEL, A.MEM_PIC_FILE_NAME,
	        A.MEM_NM, A.MEM_BIO, A.MEM_WORKING_CITY, A.MEM_STATUS,
	        B.ISSUE_NO, B.ISSUE_TITLE, B.LABEL_NO, B.MILEST_SID,
	        B.ISSUE_PRIORITY AS PRIORITY, B.PROGRESS, B.ISSUE_STATUS,
	        C.ISSUE_HIS_DATE, CM.MEM_NICK AS HIS_WRITER_NICK, CM.MEM_PIC_FILE_NAME AS HIS_WRITER_PIC,
            D.LABEL_NM, E.PROJ_TITLE AS IPROJ_TITLE, EM.MEM_NICK AS PROJ_MANAGER, E.PROJ_NO

		FROM MEMBER A
            LEFT OUTER JOIN ISSUE_ASSIGNEE BB ON (A.MEM_NO = BB.MEM_NO)
			LEFT OUTER JOIN ISSUE B ON (BB.ISSUE_SID = B.ISSUE_SID)
            LEFT OUTER JOIN ISSUE_HISTORY C ON (B.ISSUE_SID = C.ISSUE_SID)
            LEFT OUTER JOIN PROJECT E ON (B.PROJ_NO = E.PROJ_NO)
            LEFT OUTER JOIN LABEL D ON (B.LABEL_NO = D.LABEL_NO)


            LEFT OUTER JOIN PROJ_MEM AP ON (A.MEM_NO = AP.MEM_NO)
            LEFT OUTER JOIN PROJECT AM ON (AP.PROJ_NO = AM.PROJ_NO)

			LEFT OUTER JOIN MEMBER CM ON (C.MEM_NO = CM.MEM_NO)


            LEFT OUTER JOIN MEMBER EM ON (E.MEM_NO = EM.MEM_NO)
		WHERE A.MEM_NO = 1;

INSERT INTO PROJ_MEM (MEM_NO, PROJ_NO, MEM_ROLE_NO, PROJ_JOIN_DATE, PROJ_USER_NICK)
VALUES (1, 2, 1, sysdate, '해적왕 아이젠');


SELECT A.MEM_NICK AS name, B.MEM_NICK
FROM MEMBER A
LEFT OUTER JOIN ISSUE_HISTORY B ON (A.MEM_NO = B.MEM_NO)

WHERE A.MEM_NO = 1;

--issue 히스토리 작성자 검색 --
SELECT A.MEM_NO, B.PROJ_NO, A.MEM_NICK, B.ISSUE_SID, C.MEM_NO, DM.MEM_NICK
FROM MEMBER A
LEFT OUTER JOIN ISSUE B ON (A.MEM_NO = B.MEM_NO)
LEFT OUTER JOIN ISSUE_HISTORY C ON (B.ISSUE_SID = C.ISSUE_SID)
LEFT OUTER JOIN MEMBER DM ON (C.MEM_NO = DM.MEM_NO)
WHERE A.MEM_NO = 1;

FLASHBACK TABLE member TO BEFORE DROP;


-- 멤버가 속한 프로젝트 리스트 --
SELECT C.PROJ_NO
FROM MEMBER A
    LEFT OUTER JOIN PROJ_MEM B ON (A.MEM_NO = B.MEM_NO)
    LEFT OUTER JOIN PROJECT C ON (B.PROJ_NO = C.PROJ_NO)
WHERE A.MEM_NO =1;


SELECT A.MEM_NO, A.MEM_ID, A.MEM_NICK, A.MEM_TEL, A.MEM_PIC_FILE_NAME,
        A.MEM_NM, A.MEM_BIO, A.MEM_WORKING_CITY, A.MEM_STATUS,
        B.ISSUE_NO, B.ISSUE_TITLE, B.LABEL_NO, B.MILEST_SID,
        B.ISSUE_PRIORITY, B.PROGRESS, B.ISSUE_STATUS,
        C.ISSUE_HIS_NO, C.ISSUE_HIS_CONT, C.ISSUE_HIS_DATE,
        CM.MEM_NICK AS HIS_WRITER_NICK, CM.MEM_PIC_FILE_NAME AS HIS_WRITER_PIC,
        D.LABEL_NM,
				'getContextPath()/'||E.PROJ_TITLE||'/'||EM.MEM_NICK||'/'||B.ISSUE_NO AS URL,

				G.PROJ_TITLE, G.PROJ_CONT, GM.MEM_NICK AS PROJ_MANAGER

    FROM MEMBER A
        LEFT OUTER JOIN ISSUE_ASSIGNEE BC ON (A.MEM_NO = BC.MEM_NO)
        LEFT OUTER JOIN ISSUE B ON (BC.ISSUE_SID = B.ISSUE_SID)
        LEFT OUTER JOIN ISSUE_HISTORY C ON (B.ISSUE_SID = C.ISSUE_SID)
        INNER JOIN MEMBER CM ON (C.MEM_NO = CM.MEM_NO)
        LEFT OUTER JOIN LABEL D ON (B.LABEL_NO = D.LABEL_NO)
        LEFT OUTER JOIN PROJECT E ON (B.PROJ_NO = E.PROJ_NO)
        INNER JOIN MEMBER EM ON (E.MEM_NO = EM.MEM_NO)

        LEFT OUTER JOIN PROJ_MEM GC ON (A.MEM_NO = GC.MEM_NO)
        LEFT OUTER JOIN PROJECT G ON (GC.PROJ_NO = G.PROJ_NO)
        INNER JOIN MEMBER GM ON (G.MEM_NO = GM.MEM_NO)
    WHERE A.MEM_NO = 1;

-- MEMBER 정보 가지고오기 --
SELECT A.MEM_NO, A.MEM_ID, A.MEM_NICK, A.MEM_TEL, A.MEM_PIC_FILE_NAME,
        A.MEM_NM, A.MEM_BIO, A.MEM_WORKING_CITY, A.MEM_STATUS
FROM MEMBER A
WHERE A.MEM_NO = 1;



-- MEMBER 와 ISSUE, ISSUE_HISTORY 정보 가지고오기 --
SELECT A.MEM_NO, A.MEM_ID, A.MEM_NICK, A.MEM_TEL, A.MEM_PIC_FILE_NAME,
        A.MEM_NM, A.MEM_BIO, A.MEM_WORKING_CITY, A.MEM_STATUS,
        B.ISSUE_NO, B.ISSUE_TITLE, B.LABEL_NO, B.MILEST_SID,
        B.ISSUE_PRIORITY, B.PROGRESS, B.ISSUE_STATUS,
        C.ISSUE_HIS_NO, C.ISSUE_HIS_CONT, C.ISSUE_HIS_DATE,
        CM.MEM_NICK AS HIS_WRITER_NICK, CM.MEM_PIC_FILE_NAME AS HIS_WRITER_PIC
        , NULL, NULL, NULL
FROM MEMBER A
	LEFT OUTER JOIN ISSUE_ASSIGNEE BC ON (A.MEM_NO = BC.MEM_NO)
	LEFT OUTER JOIN ISSUE B ON (BC.ISSUE_SID = B.ISSUE_SID)
	LEFT OUTER JOIN ISSUE_HISTORY C ON (B.ISSUE_SID = C.ISSUE_SID)
	INNER JOIN MEMBER CM ON (C.MEM_NO = CM.MEM_NO)
WHERE A.MEM_NO = 1

UNION ALL
-- MEMBER 와 ISSUE, PROJECT 정보 가지고오기 --
SELECT A.MEM_NO, A.MEM_ID, A.MEM_NICK, A.MEM_TEL, A.MEM_PIC_FILE_NAME,
        A.MEM_NM, A.MEM_BIO, A.MEM_WORKING_CITY, A.MEM_STATUS,
		NULL, NULL, NULL, NULL,
        NULL, NULL, NULL,
        NULL, NULL, NULL,
        NULL, NULL, NULL, NULL
        G.PROJ_TITLE, G.PROJ_CONT, GM.MEM_NICK AS PROJ_MANAGERG
FROM MEMBER A
	LEFT OUTER JOIN PROJ_MEM GC ON (A.MEM_NO = GC.MEM_NO)
    LEFT OUTER JOIN PROJECT G ON (GC.PROJ_NO = G.PROJ_NO)
    INNER JOIN MEMBER GM ON (G.MEM_NO = GM.MEM_NO)
WHERE A.MEM_NO = 1;



-- MEMBER, PROJECT정보 가지고오기 --
SELECT A.MEM_NO, A.MEM_ID, A.MEM_NICK, A.MEM_TEL, A.MEM_PIC_FILE_NAME,
        A.MEM_NM, A.MEM_BIO, A.MEM_WORKING_CITY, A.MEM_STATUS,
        G.PROJ_TITLE, G.PROJ_CONT, GM.MEM_NICK AS PROJ_MANAGERG
FROM MEMBER A
        LEFT OUTER JOIN PROJ_MEM GC ON (A.MEM_NO = GC.MEM_NO)
        LEFT OUTER JOIN PROJECT G ON (GC.PROJ_NO = G.PROJ_NO)
        INNER JOIN MEMBER GM ON (G.MEM_NO = GM.MEM_NO)
WHERE A.MEM_NO = 1;


-- MEMBER, ISSUE, LABEL, URL 정보 가지고오기. --
SELECT A.MEM_NO, A.MEM_ID, A.MEM_NICK, A.MEM_TEL, A.MEM_PIC_FILE_NAME,
        A.MEM_NM, A.MEM_BIO, A.MEM_WORKING_CITY, A.MEM_STATUS,
        B.ISSUE_NO, B.ISSUE_TITLE, B.LABEL_NO, B.MILEST_SID,
        B.ISSUE_PRIORITY, B.PROGRESS, B.ISSUE_STATUS,
        C.ISSUE_HIS_NO, C.ISSUE_HIS_CONT, C.ISSUE_HIS_DATE,
        CM.MEM_NICK AS HIS_WRITER_NICK, CM.MEM_PIC_FILE_NAME AS HIS_WRITER_PIC,
        D.LABEL_NM, E.PROJ_NO AS 확인용프로젝트넘버, 
        'getContextPath()/'||E.PROJ_TITLE||'/'||EM.MEM_NICK||'/'||B.ISSUE_NO AS URL

FROM MEMBER A
        LEFT OUTER JOIN ISSUE_ASSIGNEE BC ON (A.MEM_NO = BC.MEM_NO)
        LEFT OUTER JOIN ISSUE B ON (BC.ISSUE_SID = B.ISSUE_SID)
        LEFT OUTER JOIN ISSUE_HISTORY C ON (B.ISSUE_SID = C.ISSUE_SID)
        INNER JOIN MEMBER CM ON (C.MEM_NO = CM.MEM_NO)
        LEFT OUTER JOIN LABEL D ON (B.LABEL_NO = D.LABEL_NO)
        LEFT OUTER JOIN PROJECT E ON (B.PROJ_NO = E.PROJ_NO)
        INNER JOIN MEMBER EM ON (E.MEM_NO = EM.MEM_NO)
        
WHERE A.MEM_NO = 1
UNION ALL
SELECT 
        NULL, NULL, NULL, NULL, 
        NULL, NULL, NULL, NULL,
        NULL, NULL, NULL, NULL,
        NULL, NULL, NULL,
        NULL, NULL, NULL,
        NULL, NULL,
        NULL, NULL, 
        NULL,
        G.PROJ_TITLE, G.PROJ_CONT, GM.MEM_NICK AS PROJ_MANAGERG
FROM MEMBER A
        INNER JOIN PROJ_MEM GC ON (A.MEM_NO = GC.MEM_NO)
        INNER JOIN PROJECT G ON (GC.PROJ_NO = G.PROJ_NO)
        INNER JOIN MEMBER GM ON (G.MEM_NO = GM.MEM_NO)
WHERE A.MEM_NO = 1