-- INSERT --
INSERT INTO PROJ_MEM (MEM_NO, PROJ_NO, MEM_ROLE_NO, PROJ_JOIN_DATE, PROJ_USER_NICK)
VALUES (1, 2, 1, sysdate, '해적왕 아이젠');

-- FALSHBACK --
FLASHBACK TABLE member TO BEFORE DROP;

SELECT A.MEM_NO, A.MEM_ID, A.MEM_NICK, A.MEM_TEL, A.MEM_PIC_FILE_NAME,
        A.MEM_NM, A.MEM_BIO, A.MEM_WORKING_CITY, A.MEM_STATUS,
        B.ISSUE_NO, B.ISSUE_TITLE, B.LABEL_NO, B.MILEST_SID,
        B.ISSUE_PRIORITY, B.PROGRESS, B.ISSUE_STATUS,
        C.ISSUE_HIS_NO, C.ISSUE_HIS_CONT, C.ISSUE_HIS_DATE,
        CM.MEM_NICK AS HIS_WRITER_NICK, CM.MEM_PIC_FILE_NAME AS HIS_WRITER_PIC,
        D.LABEL_NM,
				'getContextPath()/'||E.PROJ_TITLE||'/'||EM.MEM_NICK||'/'||B.ISSUE_NO AS URL,

				G.PROJ_TITLE, G.PROJ_CONT, GM.MEM_NICK AS PROJ_MANAGER

    FROM MEMBER A
        LEFT OUTER JOIN ISSUE_ASSIGNEE BC ON (A.MEM_NO = BC.MEM_NO)
        LEFT OUTER JOIN ISSUE B ON (BC.ISSUE_SID = B.ISSUE_SID)
        LEFT OUTER JOIN ISSUE_HISTORY C ON (B.ISSUE_SID = C.ISSUE_SID)
        INNER JOIN MEMBER CM ON (C.MEM_NO = CM.MEM_NO)
        LEFT OUTER JOIN LABEL D ON (B.LABEL_NO = D.LABEL_NO)
        LEFT OUTER JOIN PROJECT E ON (B.PROJ_NO = E.PROJ_NO)
        INNER JOIN MEMBER EM ON (E.MEM_NO = EM.MEM_NO)

        LEFT OUTER JOIN PROJ_MEM GC ON (A.MEM_NO = GC.MEM_NO)
        LEFT OUTER JOIN PROJECT G ON (GC.PROJ_NO = G.PROJ_NO)
        INNER JOIN MEMBER GM ON (G.MEM_NO = GM.MEM_NO)
    WHERE A.MEM_NO = 1;

-- 결과물 --
WITH PROJECTINFO AS (
		    SELECT
		        PROJ_TITLE, PROJECT.PROJ_NO, PROJ_USER_NICK, PROJ_MEM.MEM_NO,
		        MEM_NICK AS PROD_MANAGER
		    FROM
		        PROJ_MEM
		        INNER JOIN PROJECT ON(PROJ_MEM.PROJ_NO = PROJECT.PROJ_NO)
		        INNER JOIN MEMBER ON(PROJECT.MEM_NO = MEMBER.MEM_NO)
		    ),
		ISSUEINFO AS (
		    SELECT
		        ISSUE.ISSUE_SID, ISSUE_ASSIGNEE.MEM_NO AS ASSIGNEE, ISSUE.ISSUE_NO,
		        ISSUE_HISTORY.MEM_NO AS FIXER, ISSUE_HIS_NO,
		        LABEL_NO, PROJ_NO, ISSUE_TITLE, ISSUE_HIS_CONT, ISSUE_HIS_DATE, ISSUE_ASSIGNEE.MEM_NO
		    FROM
		        ISSUE_ASSIGNEE
		            INNER JOIN ISSUE ON (ISSUE_ASSIGNEE.ISSUE_SID = ISSUE.ISSUE_SID)
		            INNER JOIN ISSUE_HISTORY ON (ISSUE.ISSUE_SID = ISSUE_HISTORY.ISSUE_SID)
		)
		SELECT
		        MEM_NICK, MEM_ID, MEMBER.MEM_NO,
		        PROJECTINFO.PROJ_NO, PROJ_TITLE,
            'getContextPath()/'||PROD_MANAGER||'/'||PROJ_TITLE AS URI,
		        'getContextPath()/'||PROD_MANAGER||'/'||PROJ_TITLE||'/'||ISSUE_NO AS URL,
		        ISSUE_SID,
		        ISSUE_TITLE, FIXER, ASSIGNEE, ISSUE_HIS_CONT, ISSUE_HIS_DATE, ISSUE_HIS_NO
		FROM MEMBER
		        LEFT OUTER JOIN PROJECTINFO ON(MEMBER.MEM_NO = PROJECTINFO.MEM_NO)
		        LEFT OUTER JOIN ISSUEINFO ON(PROJECTINFO.MEM_NO = ISSUEINFO.MEM_NO)

		WHERE MEMBER.MEM_NO = 1;

-- TEST--
SELECT * FROM MEMBER;
SELECT * FROM ISSUE_HISTORY;
SELECT DISTINCT(ISSUE_SID) FROM ISSUE_HISTORY;

-- ISSUE 담당자, issueㅂ, issue 히스토리 조회
SELECT
    ISSUE.ISSUE_SID, ISSUE_ASSIGNEE.MEM_NO AS ASSIGNEE,
    ISSUE_HISTORY.MEM_NO AS 수정자,ISSUE_HISTORY.ISSUE_HIS_NO, LABEL_NO, PROJ_NO, ISSUE_TITLE
FROM
    ISSUE_ASSIGNEE
        INNER JOIN ISSUE ON (ISSUE_ASSIGNEE.ISSUE_SID = ISSUE.ISSUE_SID)
        INNER JOIN ISSUE_HISTORY ON (ISSUE.ISSUE_SID = ISSUE_HISTORY.ISSUE_SID)
WHERE ISSUE_ASSIGNEE.MEM_NO = 2
ORDER BY ISSUE_SID;
