<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="best.gaia.project.dao.ProjectDao">
	<select id="getProjNoFromIdAndTitle" parameterType="java.util.Map" resultType="Integer">
		select proj_no
		from project 
		    inner join member on (project.mem_no = member.mem_no)
		where proj_title = #{project_title}
		    and mem_id = #{manager_id}
	</select>
	<select id="getProjCount" parameterType="best.gaia.vo.ProjectVO" resultType="int">
		select a+b
		from (
		    select count(*) a
		    from project
		    where proj_title = #{proj_title} and mem_no = #{mem_no}) a,
		    (
		    select count(*) b
		    from forbidden_proj_title
		    where forbidden_proj_title = #{proj_title} ) b
	</select>
	
	<select id="selectProject" parameterType="int" resultType="best.gaia.vo.ProjectVO">
		SELECT
		    proj_no,
		    mem_no,
		    proj_title,
		    proj_cont,
		    to_char(proj_start_date, 'yyyy-mm-dd') as proj_start_date,
		    to_char(proj_est_end_date, 'yyyy-mm-dd') as proj_est_end_date,
		    issue_priority_set,
		    proj_module_set,
		    proj_status
		FROM
		    project
		WHERE PROJ_NO = #{proj_no}
	</select>
	
	<insert id="insertProject" parameterType="best.gaia.vo.ProjectVO">
		<selectKey resultType="int" keyProperty="proj_no" order="BEFORE">
			SELECT PROJ_SEQ.nextval
			FROM DUAL
		</selectKey>
		 INSERT INTO PROJECT (
		    PROJ_NO,
		    MEM_NO,
		    PROJ_TITLE,
		    PROJ_CONT,
		    PROJ_START_DATE
		) VALUES (
		    #{proj_no},
		    #{mem_no,jdbcType=NUMERIC},
		    #{proj_title,jdbcType=VARCHAR},
		    #{proj_cont,jdbcType=VARCHAR},
		    sysdate
		)
	</insert>
	
	<update id="updateProject" parameterType="best.gaia.vo.ProjectVO">
		UPDATE project
		SET
		    mem_no = #{mem_no,jdbcType=NUMERIC}
		    ,proj_title = #{proj_title,jdbcType=VARCHAR}
		    ,proj_cont = #{proj_cont,jdbcType=VARCHAR}             
			,proj_est_end_date = #{proj_est_end_date,jdbcType=VARCHAR}     
			,issue_priority_set = #{issue_priority_set,jdbcType=NUMERIC}   
			,proj_module_set = #{proj_module_set,jdbcType=NUMERIC}       
			,proj_status = #{proj_status,jdbcType=VARCHAR}          
		WHERE
			proj_no = #{proj_no}
	</update>
	
	<insert id="insertMemberRole" parameterType="best.gaia.vo.MemRoleVO">
		<selectKey resultType="int" keyProperty="mem_role_no" order="BEFORE">
			select nvl(max(mem_role_no),0)+1
			from mem_role
		</selectKey>
		INSERT INTO mem_role (
		    mem_role_no,
		    proj_no,
		    mem_role_nm,
		 	authority
		) VALUES (
		    #{mem_role_no},
		    #{proj_no,jdbcType=NUMERIC},
		    #{mem_role_nm,jdbcType=VARCHAR},
		    #{authority,jdbcType=NUMERIC}
		)
	</insert>
	
	<update id="updateMemberRole" parameterType="best.gaia.vo.MemRoleVO">
		UPDATE mem_role
		SET
		    mem_role_nm = #{mem_role_nm,jdbcType=VARCHAR}
		    ,authority = #{authority,jdbcType=NUMERIC}
		WHERE
		     mem_role_no = #{mem_role_no}
	</update>
	
	<delete id="deleteMemberRole" parameterType="int">
		DELETE FROM mem_role
		WHERE mem_role_no = #{mem_role_no}
	</delete>
	
	<insert id="insertProjMem" parameterType="best.gaia.vo.ProjMemVO">
		INSERT INTO proj_mem (
		    mem_no,
		    proj_no,
		    mem_role_no,
		    proj_join_date,
		    proj_user_nick
		) VALUES (
		    #{mem_no,jdbcType=NUMERIC},
		    #{proj_no,jdbcType=NUMERIC},
		    #{mem_role_no,jdbcType=NUMERIC},
		    sysdate,
		    #{proj_user_nick,jdbcType=VARCHAR}
		)
	</insert>
	
	
	
	
	<select id="getProjectNickNameByMemNo" parameterType="java.util.Map" resultType="String">
		select proj_user_nick
		from proj_mem
		where mem_no = #{mem_no}
			and proj_no = #{proj_no}
	</select>
	
	
	<resultMap type="best.gaia.vo.ProjectVO" id="projectMap" autoMapping="true">
		<id property="proj_no" column="PROJ_NO"/>
		<association property="projectManager" javaType="best.gaia.vo.MemberVO" autoMapping="true">
			<id property="mem_no" column="MEM_NO"/>
		</association>
	</resultMap>
	
	<select id="selectProjectList" parameterType="int" resultMap="projectMap">
		select project.proj_no, proj_title, proj_cont, proj_start_date, proj_est_end_date
		        ,proj_manager.mem_id, mem_nick, mem_pic_file_name
		from project
		    left outer join proj_mem on (project.proj_no = proj_mem.proj_no)
		    left outer join member proj_manager on (project.mem_no = proj_manager.mem_no)
		where proj_mem.mem_no = #{mem_no}
			and proj_status = 0
		order by proj_start_date
	</select>
	
	<select id="selectMemRoleList" parameterType="int" resultType="java.util.Map">
		select mem_role_no, mem_role_nm
		from mem_role
		where proj_no = #{proj_no}
		order by mem_role_no
	</select>
	
	<update id="updateProjectMemberRole" parameterType="best.gaia.vo.ProjMemVO">
		UPDATE proj_mem
		SET
		    mem_role_no = #{mem_role_no}
		WHERE
		        mem_no = #{mem_no}
		    AND proj_no = #{proj_no}
	</update>
	
	<update id="setMemberInactive" parameterType="best.gaia.vo.ProjMemVO">
		UPDATE proj_mem
		SET
		    PROJ_DROP_DATE = sysdate
		WHERE
		        mem_no = #{mem_no}
		    AND proj_no = #{proj_no}	
	</update>
	
	<update id="setMemberActive" parameterType="best.gaia.vo.ProjMemVO">
		UPDATE proj_mem
		SET
		    PROJ_DROP_DATE = null
		WHERE
		        mem_no = #{mem_no}
		    AND proj_no = #{proj_no}	
	</update>
	
	<select id="searchMemberToInvite" parameterType="java.util.Map" resultType="best.gaia.vo.MemberVO">
		with memlist as(
		    select mem_no
		    from proj_mem
		    where proj_no= #{proj_no}
		)
		select distinct mem_no, mem_id, mem_nick, mem_pic_file_name,mem_nm, mem_bio, mem_working_city
		        ,mem_status
		from member
		where mem_no not in (select mem_no from memlist)
		<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(keyword)">
		        AND ( instr(LOWER(mem_id) ,LOWER(#{keyword}))>0
		          OR instr(LOWER(mem_nick) ,LOWER(#{keyword}))>0
		          OR instr(LOWER(mem_nm) ,LOWER(#{keyword}))>0
		          OR instr(LOWER(mem_bio) ,LOWER(#{keyword}))>0
		          OR instr(LOWER(mem_working_city) ,LOWER(#{keyword}))>0)
		</if>
		order by mem_no
	</select>
	
	<select id="selectLowestRoleNo" parameterType="int" resultType="int">
		select max(mem_role_no)
		from mem_role
		where proj_no =#{proj_no}
	</select>
	
	<resultMap type="best.gaia.vo.ProjectVO" id="projectMapToManage" autoMapping="true">
		<id property="proj_no" column="PROJ_ID"/>
		<collection property="labelList" ofType="best.gaia.vo.LabelVO" javaType="java.util.List" autoMapping="true">
			<id column="LABEL_NO" property="label_no"/>
		</collection>
		<collection property="roleList" ofType="best.gaia.vo.MemRoleVO" javaType="java.util.List" autoMapping="true">
			<id column="MEM_ROLE_NO" property="mem_role_no"/>
		</collection>
	</resultMap>
	
	<select id="loadProjectForManagement" parameterType="int" resultMap="projectMapToManage">
		select project.proj_no as proj_id, mem_no, proj_title, proj_cont, proj_start_date
		        ,proj_est_end_date, issue_priority_set, proj_module_set, proj_status
		        ,label.label_no, label.label_nm, label.label_color, label.label_icon
		        ,mem_role.mem_role_no, mem_role.mem_role_nm, mem_role.authority
		from project
		    left outer join label on (project.proj_no = label.proj_no)
		    left outer join mem_role on (project.proj_no = mem_role.proj_no)
		where project.proj_no = ${proj_no}
		order by label_no, mem_role_no		
	</select>
	
	<insert id="insertLabel" parameterType="best.gaia.vo.LabelVO">
		<selectKey resultType="int" keyProperty="label_no" order="BEFORE">
			select nvl(max(label_no),0)+1
			from label
		</selectKey>
		INSERT INTO label (
		    label_no,
		    proj_no,
		    label_nm,
		    label_icon,
		    label_color
		) VALUES (
		    #{label_no},
		    #{proj_no,jdbcType=NUMERIC},
		    #{label_nm,jdbcType=VARCHAR},
		    #{label_icon,jdbcType=VARCHAR},
		    #{label_color,jdbcType=VARCHAR}
		)
	</insert>
	
	<delete id="deleteLabel" parameterType="int">
	    DELETE FROM label
		WHERE label_no = #{label_no}
	</delete>
	
	<update id="updateLabel" parameterType="best.gaia.vo.LabelVO">
		UPDATE label
		SET
		    label_nm = #{label_nm}
		    ,label_icon = #{label_icon}
		    ,label_color = #{label_color}
		WHERE
	        label_no = #{label_no}
	</update>
	
	<select id="selectLabelList" parameterType="int">
		select label_no, label_nm, label_icon, label_color
		from label
		where proj_no = #{proj_no}
	</select>
	
</mapper>