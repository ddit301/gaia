<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="best.gaia.issue.dao.MilestoneDao">
	
	<select id="selectMilestoneList" parameterType="best.gaia.vo.PagingVO" resultType="best.gaia.vo.MilestoneVO">
			SELECT A.MILEST_TITLE,A.MILEST_NO,A.MILEST_CONT
                , TO_CHAR(A.MILEST_START_DATE,'YYYY-MM-DD') AS MILEST_START_DATE 
                , TO_CHAR(A.MILEST_END_DATE,'YYYY-MM-DD') AS MILEST_END_DATE
                , SUM(A.ISSUE_STATUS)/COUNT(A.ISSUE_STATUS)*100 AS MILEST_PERCENT
                , SUM(A.ISSUE_STATUS) AS CLOSE_ISSUE_CNT
                , COUNT(A.ISSUE_STATUS) - SUM(A.ISSUE_STATUS) AS OPEN_ISSUE_CNT
		  FROM(SELECT MILESTONE.*, ISSUE.ISSUE_TITLE, ISSUE.ISSUE_STATUS
   				 FROM MILESTONE
       				 LEFT OUTER JOIN ISSUE ON(MILESTONE.MILEST_SID = ISSUE.MILEST_SID))A
               WHERE PROJ_NO = #{detailSearch.proj_no}
         GROUP BY A.MILEST_TITLE, A.MILEST_START_DATE, A.MILEST_END_DATE, A.MILEST_NO,A.MILEST_CONT
	</select>
	
	<resultMap type="best.gaia.vo.MilestoneVO" id="milestoneMap" autoMapping="true">
			<id property="milest_sid" column="MILEST_SID" />
		<collection property="issueList" ofType="IssueVO" javaType="java.util.List" autoMapping="true">
			<id property="issue_sid" column="ISSUE_SID"/>
		</collection>
	</resultMap>
	
	<select id="selectMilestone" parameterType="best.gaia.vo.MilestoneVO" resultMap="milestoneMap">
 SELECT DISTINCT ISSUE.ISSUE_NO, ISSUE.ISSUE_TITLE,ISSUE.ISSUE_STATUS,ISSUE.PROGRESS,ISSUE.ISSUE_PRIORITY,
        MILEST.MILEST_SID, MILEST.MILEST_NO, MILEST.MILEST_TITLE,MILEST.MILEST_CONT,MILEST.MILEST_CONT,MILEST.MILEST_DATE,
        TO_CHAR(MILEST.MILEST_START_DATE,'YYYY-MM-DD') AS MILEST_START_DATE , TO_CHAR(MILEST.MILEST_END_DATE,'YYYY-MM-DD') AS MILEST_END_DATE,
        LABEL.LABEL_NO, LABEL.LABEL_NM,
        ISSUE.MEM_NO, ISSUE_WRI_NICK.PROJ_USER_NICK AS ISSUE_WRITER,
        MILEST.MEM_NO, MILEST_WRI_NICK.PROJ_USER_NICK AS MILEST_WRITER,
        IS_ASSIGNEE.MEM_NO AS ISSUE_ASSIN_MEM_NO,
        IS_ASSIGN_MEM_NICK.PROJ_USER_NICK AS ISSUE_ASIGN_MEM,
         (SELECT SUM(A.ISSUE_STATUS)/COUNT(A.ISSUE_STATUS)*100
                   FROM(SELECT MILESTONE.*, ISSUE.ISSUE_TITLE, ISSUE.ISSUE_STATUS
            FROM MILESTONE
                LEFT OUTER JOIN ISSUE ON(MILESTONE.MILEST_SID = ISSUE.MILEST_SID)
                 WHERE MILEST_NO = #{milest_no})A) AS MILEST_PERCENT,
         (SELECT COUNT (A.ISSUE_STATUS)
            FROM(SELECT ISSUE.ISSUE_STATUS
                FROM MILESTONE
                   LEFT OUTER JOIN ISSUE ON(MILESTONE.MILEST_SID = ISSUE.MILEST_SID)
                   WHERE MILESTONE.MILEST_NO = #{milest_no})A
             WHERE ISSUE_STATUS = 1) AS CLOSE_ISSUE_CNT,
        (SELECT COUNT (A.ISSUE_STATUS)
            FROM(SELECT ISSUE.ISSUE_STATUS
                FROM MILESTONE
                   LEFT OUTER JOIN ISSUE ON(MILESTONE.MILEST_SID = ISSUE.MILEST_SID)
                   WHERE MILESTONE.MILEST_NO = #{milest_no})A
        	WHERE ISSUE_STATUS = 0) AS OPEN_ISSUE_CNT                             
   FROM MILESTONE MILEST
        LEFT OUTER JOIN ISSUE ISSUE ON (MILEST.MILEST_SID = ISSUE.MILEST_SID)
        LEFT OUTER JOIN LABEL LABEL ON (ISSUE.PROJ_NO = LABEL.PROJ_NO AND LABEL.LABEL_NO = ISSUE.LABEL_NO)
        LEFT OUTER JOIN MEMBER ISSUE_WRI_MEM ON (ISSUE.MEM_NO = ISSUE_WRI_MEM.MEM_NO)
        LEFT OUTER JOIN PROJ_MEM ISSUE_WRI_NICK ON (ISSUE.PROJ_NO = ISSUE_WRI_NICK.PROJ_NO AND ISSUE_WRI_MEM.MEM_NO = ISSUE_WRI_NICK.MEM_NO)
        INNER JOIN MEMBER MILEST_WRI_MEM ON (MILEST.MEM_NO = MILEST_WRI_MEM.MEM_NO)
        LEFT OUTER JOIN PROJ_MEM MILEST_WRI_NICK ON (MILEST.PROJ_NO = MILEST_WRI_NICK.PROJ_NO AND MILEST_WRI_MEM.MEM_NO = MILEST_WRI_NICK.MEM_NO)
        LEFT OUTER JOIN ISSUE_ASSIGNEE IS_ASSIGNEE ON(IS_ASSIGNEE.ISSUE_SID = ISSUE.ISSUE_SID)
        LEFT OUTER JOIN MEMBER ISSUE_ASSIGN_MEM ON (ISSUE_ASSIGN_MEM.MEM_NO = IS_ASSIGNEE.MEM_NO)
        LEFT OUTER JOIN PROJ_MEM IS_ASSIGN_MEM_NICK ON (IS_ASSIGN_MEM_NICK.MEM_NO = ISSUE_ASSIGN_MEM.MEM_NO AND IS_ASSIGN_MEM_NICK.PROJ_NO = ISSUE.PROJ_NO)
        INNER JOIN PROJECT ON (ISSUE.PROJ_NO = PROJECT.PROJ_NO)
        INNER JOIN MEMBER PM ON (PROJECT.MEM_NO = PM.MEM_NO)
        WHERE MILEST.MILEST_NO = #{milest_no}  
			       AND PM.MEM_NICK = #{mem_nick}
			       AND PROJECT.PROJ_TITLE = #{proj_title}    
	</select>
	

	
	
</mapper>