<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="best.gaia.issue.dao.MilestoneDao">
	
	<select id="selectMilestoneList" parameterType="best.gaia.vo.PagingVO" resultType="best.gaia.vo.MilestoneVO">
			SELECT A.MILEST_TITLE,A.MILEST_NO,A.MILEST_CONT
                , TO_CHAR(A.MILEST_START_DATE,'YYYY-MM-DD') AS MILEST_START_DATE 
                , TO_CHAR(A.MILEST_END_DATE,'YYYY-MM-DD') AS MILEST_END_DATE
                , SUM(A.ISSUE_STATUS)/COUNT(A.ISSUE_STATUS)*100 AS MILEST_PERCENT
                , SUM(A.ISSUE_STATUS) AS CLOSE_ISSUE_CNT
                , COUNT(A.ISSUE_STATUS) - SUM(A.ISSUE_STATUS) AS OPEN_ISSUE_CNT
		  FROM(SELECT MILESTONE.*, ISSUE.ISSUE_TITLE, ISSUE.ISSUE_STATUS
   				 FROM MILESTONE
       				 LEFT OUTER JOIN ISSUE ON(MILESTONE.MILEST_SID = ISSUE.MILEST_SID))A
               WHERE PROJ_NO = #{detailSearch.proj_no}
         GROUP BY A.MILEST_TITLE, A.MILEST_START_DATE, A.MILEST_END_DATE, A.MILEST_NO,A.MILEST_CONT
	</select>
	
	<resultMap type="best.gaia.vo.MilestoneVO" id="milestoneMap" autoMapping="true">
			<id property="milest_sid" column="MILEST_SID" />
		<collection property="issueList" ofType="IssueVO" javaType="java.util.List" autoMapping="true">
			<id property="issue_sid" column="ISSUE_ID"/>
			<association property="label" javaType="java.util.Map" autoMapping="false">
				<result column="LABEL_NO" property="label_no"></result>
				<result column="LABEL_NM" property="label_nm"></result>
			</association>
		<collection property="assigneeList" ofType="MemberVO" javaType="java.util.Set" autoMapping="true">
				<id property="mem_no" column="MEM_NO" />	
		</collection>
		</collection>
	</resultMap>
	
	<select id="selectMilestone" resultMap="milestoneMap">
SELECT DISTINCT ISSUE.ISSUE_SID AS ISSUE_ID, ISSUE.ISSUE_NO, ISSUE.ISSUE_TITLE,ISSUE.ISSUE_STATUS,ISSUE.PROGRESS,ISSUE.ISSUE_PRIORITY,
        MILEST.MILEST_SID, MILEST.MILEST_NO, MILEST.MILEST_TITLE,MILEST.MILEST_CONT,MILEST.MILEST_CONT,MILEST.MILEST_DATE,MILEST.MILEST_STATUS,
        TO_CHAR(MILEST.MILEST_START_DATE,'YYYY-MM-DD') AS MILEST_START_DATE , TO_CHAR(MILEST.MILEST_END_DATE,'YYYY-MM-DD') AS MILEST_END_DATE,
        LABEL.LABEL_NO, LABEL.LABEL_NM,
        ISSUE_WRI_MEM.MEM_PIC_FILE_NAME AS ISSUE_WRI_MEM_PIC,ISSUE.MEM_NO AS ISSUE_WRI_MEM_NO, ISSUE_WRI_NICK.PROJ_USER_NICK AS ISSUE_WRITER,
        MILEST.MEM_NO, MILEST_WRI_NICK.PROJ_USER_NICK AS MILEST_WRITER,
        IS_ASSIGNEE.MEM_NO AS ISSUE_ASSIN_MEM_NO,
        ISSUE_ASSIGN_MEM.MEM_PIC_FILE_NAME AS ISSUE_ASSIGN_MEM_PIC,
        IS_ASSIGN_MEM_NICK.PROJ_USER_NICK AS ISSUE_ASIGN_MEM,
         (SELECT SUM(A.ISSUE_STATUS)/COUNT(A.ISSUE_STATUS)*100
                   FROM(SELECT MILESTONE.*, ISSUE.ISSUE_TITLE, ISSUE.ISSUE_STATUS
            FROM MILESTONE
                LEFT OUTER JOIN ISSUE ON(MILESTONE.MILEST_SID = ISSUE.MILEST_SID)
                 WHERE MILEST_NO = #{search.milest_no,jdbcType=NUMERIC})A) AS MILEST_PERCENT,
         (SELECT COUNT (A.ISSUE_STATUS)
            FROM(SELECT ISSUE.ISSUE_STATUS
                FROM MILESTONE
                   LEFT OUTER JOIN ISSUE ON(MILESTONE.MILEST_SID = ISSUE.MILEST_SID)
                   WHERE MILESTONE.MILEST_NO = #{search.milest_no,jdbcType=NUMERIC})A
             WHERE ISSUE_STATUS = 1) AS CLOSE_ISSUE_CNT,
        (SELECT COUNT (A.ISSUE_STATUS)
            FROM(SELECT ISSUE.ISSUE_STATUS
                FROM MILESTONE
                   LEFT OUTER JOIN ISSUE ON(MILESTONE.MILEST_SID = ISSUE.MILEST_SID)
                   WHERE MILESTONE.MILEST_NO = #{search.milest_no,jdbcType=NUMERIC})A
         WHERE ISSUE_STATUS = 0) AS OPEN_ISSUE_CNT,
         (SELECT COUNT(*) -1
		        FROM ISSUE_HISTORY
		        WHERE ISSUE_HISTORY.ISSUE_SID = ISSUE.ISSUE_SID
		                AND ISSUE_HISTORY.ISSUE_HIS_TYPE = 'RE'
		    ) AS REPLYCOUNT  
                               
   FROM MILESTONE MILEST
     LEFT OUTER JOIN (
     		SELECT * 
     		  FROM ISSUE
     		 <where>
     		 	<if test="search.containsKey('issue_status')">
     		 		issue_status = #{search.issue_status ,jdbcType=NUMERIC}
     		 	</if>
     		 </where>
     	)
      ISSUE ON (MILEST.MILEST_SID = ISSUE.MILEST_SID)
        LEFT OUTER JOIN LABEL LABEL ON (ISSUE.PROJ_NO = LABEL.PROJ_NO AND LABEL.LABEL_NO = ISSUE.LABEL_NO)
        LEFT OUTER JOIN MEMBER ISSUE_WRI_MEM ON (ISSUE.MEM_NO = ISSUE_WRI_MEM.MEM_NO)
        LEFT OUTER JOIN PROJ_MEM ISSUE_WRI_NICK ON (ISSUE.PROJ_NO = ISSUE_WRI_NICK.PROJ_NO AND ISSUE_WRI_MEM.MEM_NO = ISSUE_WRI_NICK.MEM_NO)
        INNER JOIN MEMBER MILEST_WRI_MEM ON (MILEST.MEM_NO = MILEST_WRI_MEM.MEM_NO)
        LEFT OUTER JOIN PROJ_MEM MILEST_WRI_NICK ON (MILEST.PROJ_NO = MILEST_WRI_NICK.PROJ_NO AND MILEST_WRI_MEM.MEM_NO = MILEST_WRI_NICK.MEM_NO)
        LEFT OUTER JOIN ISSUE_ASSIGNEE IS_ASSIGNEE ON(IS_ASSIGNEE.ISSUE_SID = ISSUE.ISSUE_SID)
        LEFT OUTER JOIN MEMBER ISSUE_ASSIGN_MEM ON (ISSUE_ASSIGN_MEM.MEM_NO = IS_ASSIGNEE.MEM_NO)
        LEFT OUTER JOIN PROJ_MEM IS_ASSIGN_MEM_NICK ON (IS_ASSIGN_MEM_NICK.MEM_NO = ISSUE_ASSIGN_MEM.MEM_NO AND IS_ASSIGN_MEM_NICK.PROJ_NO = ISSUE.PROJ_NO)
        WHERE MILEST.MILEST_NO = #{search.milest_no,jdbcType=NUMERIC}  
			       AND MILEST.PROJ_NO = #{search.proj_no,jdbcType=NUMERIC}
			       
			       ORDER BY ISSUE_NO DESC    
	</select>
	
	
	<insert id="insertMilestone" parameterType="best.gaia.vo.MilestoneVO">
		<selectKey resultType = "best.gaia.vo.MilestoneVO" keyProperty="milest_sid,milest_no" order="BEFORE">
			   SELECT *
  				 FROM
				    (SELECT MAX(MILEST_SID)+1 AS MILEST_SID
				    FROM MILESTONE)A,
				    (SELECT MAX(MILEST_NO)+1 AS MILEST_NO
                   	 FROM MILESTONE
                     LEFT OUTER JOIN PROJECT PROJ ON (PROJ.PROJ_NO = MILESTONE.PROJ_NO)
                     WHERE MILESTONE.PROJ_NO = #{proj_no})B
		</selectKey>
			 INSERT INTO MILESTONE(
                MILEST_SID
                ,MEM_NO
                ,PROJ_NO
                ,MILEST_NO
                ,MILEST_TITLE
                ,MILEST_CONT
                ,MILEST_DATE
                ,MILEST_START_DATE
                ,MILEST_END_DATE
                ) VALUES (
                #{milest_sid}
                , #{mem_no,jdbcType=NUMERIC}
                , #{proj_no,jdbcType=NUMERIC}
                , #{milest_no} 
                , #{milest_title,jdbcType=VARCHAR}
                ,#{milest_cont,jdbcType=VARCHAR}
                , sysdate
                , TO_DATE(#{milest_start_date,jdbcType=VARCHAR},'YYYY-MM-DD')
                , TO_DATE(#{milest_end_date,jdbcType=VARCHAR},'YYYY-MM-DD')
                )
	</insert>
	
	<update id="updateMilestone" parameterType="best.gaia.vo.MilestoneVO">
			update milestone
		       set  milest_title = #{milest_title,jdbcType=VARCHAR}
		           ,milest_cont = #{milest_cont,jdbcType=VARCHAR}
		           ,milest_date = sysdate
		           ,milest_start_date = TO_DATE(#{milest_start_date,jdbcType=VARCHAR},'YYYY-MM-DD')
		           ,milest_end_date = TO_DATE(#{milest_end_date,jdbcType=VARCHAR},'YYYY-MM-DD')
		           ,milest_status = #{milest_status,jdbcType=NUMERIC}
		      where milest_sid = #{milest_sid,jdbcType=NUMERIC}
	</update>
	
	
	<delete id="deleteMilestone" parameterType="best.gaia.vo.MilestoneVO">
			 delete from milestone
   			 where milest_sid = #{milest_sid ,jdbcType=NUMERIC}
	</delete>
	
	
</mapper>