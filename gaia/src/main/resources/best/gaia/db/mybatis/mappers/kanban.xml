<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="best.gaia.project.dao.KanbanDao">

	<resultMap type="best.gaia.vo.KanbanColumnVO" id="kanbanMap" autoMapping="true">
		<id property="kb_col_no" column="KB_COL_ID"/>
		<collection property="cardList" ofType="best.gaia.vo.KanbanCardVO" 
			javaType="java.util.List" autoMapping="true">
			<id property="kb_card_no" column="KB_CARD_NO"/>
			<association property="writer" javaType="best.gaia.vo.MemberVO" autoMapping="false">
				<id column="CARD_WRITER_MEM_NO" property="mem_no"/>
				<result column="CARD_WRITER_NICK" property="mem_nick"/>
			</association>
			<association property="issue" javaType="best.gaia.vo.IssueVO" autoMapping="false">
				<id column="ISSUE_SID" property="issue_sid"/>
				<result column="ISSUE_NO" property="issue_no"/>
				<result column="ISSUE_WRITER_NO" property="mem_no"/>
				<result column="ISSUE_TITLE" property="issue_title"/>
				<result column="ISSUE_END_DATE" property="issue_end_date"/>
				<result column="ISSUE_STATUS" property="issue_status"/>
				<result column="ISSUE_PRIORITY" property="issue_priority"/>
				<association property="writer" javaType="best.gaia.vo.MemberVO" autoMapping="false">
					<id column="ISSUE_WRITER_NO" property="mem_no"/>
					<result column="ISSUE_WRITER_NICK" property="mem_nick"/>
					<result column="ISSUE_WRITER_PIC" property="mem_pic_file_name"/>
				</association>
				<association property="milestone" javaType="best.gaia.vo.MilestoneVO" autoMapping="false">
					<id column="MILEST_SID" property="milest_sid"/>
					<result column="MILEST_TITLE" property="milest_title"/>
				</association>
				<association property="label" javaType="java.util.Map" autoMapping="false">
					<result column="LABEL_NO" property="label_no"/>
					<result column="LABEL_NM" property="label_nm"/>
				</association>
				<collection property="assigneeList" ofType="MemberVO" javaType="java.util.Set" autoMapping="false">
					<id column="ASSIGNEE_MEM_NO" property="mem_no"/>
					<result column="ASSIGNEE_MEM_NICK" property="mem_nick"/>
				</collection>
			</association>
		</collection>
	</resultMap>

	<select id="selectKanbanColumnList" parameterType="int" resultMap="kanbanMap">
		with cards as (
		    select rownum rn, kb_col_no as kb_col_no, kb_card_no 
		            ,kb_card_priv_no, issue_sid, kb_card_cont, kb_card_write_date
		            , mem_no
		    from  kanban_card 
		    start with kb_card_priv_no is null
		    connect by prior kb_card_no = kb_card_priv_no
		)
		, issues as (
		    select issue.issue_sid, issue.issue_no
		            ,issue_title, issue_end_date, issue_status, issue_priority
		            ,writer.mem_no as issue_writer_no
		            ,writer.mem_pic_file_name as issue_writer_pic
		            ,writer_pm.proj_user_nick as issue_writer_nick
		            ,milestone.milest_sid, milestone.milest_title
		            ,label.label_no, label.label_nm
		            ,assignee_pm.mem_no as assignee_mem_no
		            ,assignee_pm.proj_user_nick as assignee_mem_nick
		    from issue
		        inner join member writer on (issue.mem_no = writer.mem_no)
		        left outer join proj_mem writer_pm on (writer.mem_no = writer_pm.mem_no and issue.proj_no = writer_pm.proj_no)
		        left outer join milestone on (issue.milest_sid = milestone.milest_sid)
		        left outer join label on (issue.label_no = label.label_no)
		        left outer join issue_assignee on (issue.issue_sid = issue_assignee.issue_sid)
		        left outer join member assignee on (issue_assignee.mem_no = assignee.mem_no)
		        left outer join proj_mem assignee_pm on (assignee.mem_no = assignee_pm.mem_no and issue.proj_no = assignee_pm.proj_no)
		)
		select kanban.KB_COL_NO as kb_col_id
		        , KB_COL_PRIV_NO , kanban.PROJ_NO , KB_COL_NM
		        , cards.*
		        , card_writer.mem_no as card_writer_mem_no
		        , card_writer_proj.proj_user_nick as card_writer_nick
		        , issues.*
		from kanban_col kanban
		        left outer join cards on (kanban.kb_col_no =cards.kb_col_no)
		        left outer join member card_writer on (cards.mem_no = card_writer.mem_no)
		        left outer join proj_mem card_writer_proj on (card_writer.mem_no = card_writer_proj.mem_no and kanban.proj_no = card_writer_proj.proj_no)
		        left outer join issues on (cards.issue_sid = issues.issue_sid)
		where kanban.proj_no = #{proj_no}
		start with kanban.kb_col_priv_no is null
		connect by prior kanban.kb_col_no = kanban.kb_col_priv_no
		order siblings by rn
	</select>
	
	<select id="selectCard" parameterType="int" resultType="best.gaia.vo.KanbanCardVO">
		select card.kb_card_no, card.kb_card_priv_no, card.mem_no, card.kb_col_no
      	  ,card.issue_sid, card.kb_card_cont, to_char(card.kb_card_write_date, 'yyyy-mm-dd hh24-mi-ss') as kb_card_write_date
      	  , next.kb_card_no as kb_card_next_no
		from kanban_card card
		    left outer join kanban_card next on (card.kb_card_no = next.kb_card_priv_no)
		where card.kb_card_no = #{kb_card_no}
	</select>
	
	<select id="getLastCardNo" parameterType="int" resultType="Integer">
		select card.kb_card_no
		from kanban_card card
       	 left outer join kanban_card next on (card.kb_card_no = next.kb_card_priv_no)
		where card.kb_col_no = #{kb_col_no} and next.kb_card_no is null
	</select>
	
	<update id="updateCard" parameterType="best.gaia.vo.KanbanCardVO">
		UPDATE KANBAN_CARD
		<set>
		    KB_CARD_PRIV_NO = #{kb_card_priv_no,jdbcType=NUMERIC}
			<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(kb_col_no)">
			    ,KB_COL_NO = #{kb_col_no,jdbcType=NUMERIC}
			</if>
		</set>
   		WHERE
	        KB_CARD_NO = #{kb_card_no}
	</update>
	
	<update id="updateCardContent" parameterType="best.gaia.vo.KanbanCardVO">
		UPDATE KANBAN_CARD
		<set>
		    KB_CARD_CONT = #{kb_card_cont,jdbcType=VARCHAR}
		</set>
   		WHERE
	        KB_CARD_NO = #{kb_card_no}	
	</update>
	
	<insert id="insertCard" parameterType="best.gaia.vo.KanbanCardVO">
		<selectKey resultType="int" keyProperty="kb_card_no" order="BEFORE">
			SELECT nvl(MAX(KB_CARD_NO),0)+1
			FROM KANBAN_CARD
		</selectKey>
			INSERT INTO kanban_card (
			    kb_card_no,
			    kb_card_priv_no,
			    mem_no,
			    kb_col_no,
			    kb_card_cont,
			    kb_card_write_date
			) VALUES (
			    #{kb_card_no}
			    ,#{kb_card_priv_no,jdbcType=NUMERIC}
			    ,#{mem_no,jdbcType=NUMERIC}
			    ,#{kb_col_no,jdbcType=NUMERIC}
			    ,#{kb_card_cont,jdbcType=VARCHAR}
			    ,sysdate
			)
	</insert>
	
	<insert id="insertCardWithIssue" parameterType="best.gaia.vo.KanbanCardVO">
		<selectKey keyProperty="kb_card_no,kb_card_priv_no,kb_col_no" resultType="best.gaia.vo.KanbanCardVO" order="BEFORE">
			select *
			from(
			    select nvl(max(kb_card_no),0)+1 as kb_card_no
			    from kanban_card)a
			    ,
			    (select card.kb_card_no as kb_card_priv_no, card.kb_col_no
			    from kanban_card card
			            left outer join kanban_card next on (card.kb_card_no = next.kb_card_priv_no)
			    where card.kb_col_no in (select kb_col_no
			                                from kanban_col
			                                where proj_no=1
			                                    and kb_col_priv_no is null)
			        and next.kb_card_no is null)c
		</selectKey>
			INSERT INTO kanban_card (
			    kb_card_no,
			    kb_card_priv_no,
			    mem_no,
			    kb_col_no,
			    issue_sid,
			    kb_card_write_date
			) VALUES (
			    #{kb_card_no}
			    ,#{kb_card_priv_no}
			    ,#{mem_no,jdbcType=NUMERIC}
			    ,#{kb_col_no}
			    ,#{issue_sid,jdbcType=NUMERIC}
			    ,sysdate
			)
	</insert>
	
	<delete id="deleteCard" parameterType="best.gaia.vo.KanbanCardVO">
		delete from kanban_card
		where kb_card_no = #{kb_card_no}
	</delete>
	
</mapper>

