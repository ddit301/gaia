<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="best.gaia.member.dao.MemberDao">
	<select id="selectMemberForAuth" parameterType="String" resultType="MemberVO">
		SELECT MEM_NO, MEM_ID, MEM_PASS
		FROM MEMBER                                      
		WHERE MEM_ID = #{mem_id}  AND MEM_QUIT_DATE IS NULL
	</select>
	
	<select id="selectMemberDetail" parameterType="String" resultType="MemberVO">
		SELECT *
		FROM MEMBER
	</select>
	
	<resultMap type="best.gaia.vo.MemberVO" id="memberMap" autoMapping="true">
		<id property="mem_no" column="MEM_NO"/>
		<collection property="projectList" ofType="ProjectVO" javaType="java.util.List" autoMapping="true">
			<id property="proj_no" column="MEMPROJ_NO"/>
		</collection>
		<collection property="issueList" ofType="IssueVO" javaType="java.util.Set" autoMapping="true">
			<id property="issue_sid" column="ISSUE_SID"/>
			<association property="project" javaType="best.gaia.vo.ProjectVO" autoMapping="true">
				<id property="proj_no" column="PROJ_NO"/>
			</association>
			<collection property="historyList" ofType="IssueHistoryVO" javaType="java.util.List" autoMapping="true">
				<id property="issue_his_no" column="ISSUE_HIS_NO"/>
			</collection>
		</collection>
	</resultMap>
	
	<select id="selectMemberDetailByNo" parameterType="Integer" resultMap="memberMap">
		SELECT A.MEM_NO, A.MEM_ID, A.MEM_NICK, A.MEM_TEL, A.MEM_PIC_FILE_NAME,
	        A.MEM_NM, A.MEM_BIO, A.MEM_WORKING_CITY, A.MEM_STATUS,
	         AP.PROJ_NO, AM.PROJ_NO AS MEMPROJ_NO, AM.PROJ_TITLE,
	        B.ISSUE_NO, B.ISSUE_TITLE, B.LABEL_NO, B.MILEST_SID,
	        B.ISSUE_PRIORITY AS PRIORITY, B.PROGRESS, B.ISSUE_STATUS, 
	        C.ISSUE_HIS_DATE, CM.MEM_NICK AS HIS_WRITER_NICK, CM.MEM_PIC_FILE_NAME AS HIS_WRITER_PIC,
            D.LABEL_NM, E.PROJ_TITLE, EM.MEM_NICK AS PROJ_MANAGER, E.PROJ_NO
           
        
		FROM MEMBER A
			LEFT OUTER JOIN ISSUE B ON (A.MEM_NO = B.MEM_NO)
            LEFT OUTER JOIN PROJ_MEM AP ON (A.MEM_NO = AP.MEM_NO)
            LEFT OUTER JOIN PROJECT AM ON (AP.PROJ_NO = AM.PROJ_NO) 
			LEFT OUTER JOIN ISSUE_HISTORY C ON (B.ISSUE_SID = C.ISSUE_SID)
			LEFT OUTER JOIN MEMBER CM ON (C.MEM_NO = CM.MEM_NO)
            LEFT OUTER JOIN LABEL D ON (B.LABEL_NO = D.LABEL_NO)
            LEFT OUTER JOIN PROJECT E ON (B.PROJ_NO = E.PROJ_NO)
            LEFT OUTER JOIN MEMBER EM ON (E.MEM_NO = EM.MEM_NO)
		WHERE A.MEM_NO = 1
	</select>
	
	<insert id="insertMember" parameterType="MemberVO">
		<selectKey resultType="int" keyProperty="mem_no" order="BEFORE">
			SELECT MEM_SEQ.NEXTVAL
			FROM DUAL
		</selectKey>
		INSERT INTO MEMBER (MEM_NO ,MEM_ID ,MEM_PASS ,MEM_NICK, MEM_SIGN_DATE, MEM_STATUS)
		VALUES(#{mem_no},#{mem_id},#{mem_pass}, #{mem_nick}, SYSDATE, 'ACTIVE')
	</insert>
	
	<update id="updateMember" parameterType="MemberVO">
		UPDATE MEMBER
			SET
		<trim prefixOverrides=",">
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_nick)">
		    , MEM_NICK = #{mem_nick}
		    </if>
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_tel)">
		    , mem_tel = #{mem_tel}
		    </if>
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_pic_file_name)">
		    , MEM_PIC_FILE_NAME = #{mem_pic_file_name}
		    </if>
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_nm)">
		    , MEM_NM = #{mem_nm}
		    </if>
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_bio)">
		    , MEM_BIO = #{mem_bio}
		    </if>
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_working_city)">
		    , MEM_WORKING_CITY = #{mem_working_city}
		    </if>
	    </trim>
	        WHERE MEM_NO = #{mem_no}
	</update>
	
	<update id="deleteMember" parameterType="Integer">
<!-- 		 UPDATE MEMBER -->
<!-- 		 	SET MEM_QUIT_DATE = SYSDATE -->
<!-- 	        WHERE MEM_NO = #{mem_no} -->
	</update>
	
</mapper>