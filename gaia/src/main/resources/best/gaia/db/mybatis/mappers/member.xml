<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="best.gaia.member.dao.MemberDao">
	<select id="selectMemberForAuth" parameterType="String" resultType="MemberVO">
		SELECT MEM_NO, MEM_ID, MEM_PASS, MEM_NICK, MEM_PIC_FILE_NAME
		FROM MEMBER
		WHERE MEM_ID = #{mem_id}  AND MEM_QUIT_DATE IS NULL
	</select>
	
	<select id="selectMemberDetailByNo" parameterType="String" resultType="MemberVO">
	WITH MEMSTAT AS (
		SELECT COM_CODE_GRP, COM_CODE_NM, COM_CODE
		FROM COM_CODE
		WHERE COM_CODE_GRP = 'MS'
		)
		SELECT MEM_NO, MEM_ID, MEM_PASS, MEM_NICK, 
                MEM_TEL, MEM_PIC_FILE_NAME,
                MEM_SIGN_DATE, MEM_NM, MEM_BIO, MEM_WORKING_CITY,
                COM_CODE_NM AS MEM_STATUS
		FROM MEMBER
			INNER JOIN MEMSTAT ON(MEMBER.MEM_STATUS = MEMSTAT.COM_CODE)
		WHERE MEM_NO = ${mem_no}
	</select>
	
	<select id="memberStatusList" resultType="java.util.Map">
		SELECT COM_CODE, COM_CODE_NM 
		FROM COM_CODE
		WHERE COM_CODE_GRP = 'MS' 
		ORDER BY COM_CODE
	</select>
	
	<resultMap type="best.gaia.vo.MemberVO" id="memberMap" autoMapping="true">
		<id property="mem_no" column="MEM_NO"/>
		<collection property="projectList" ofType="ProjectVO" javaType="java.util.List" autoMapping="true">
			<id property="proj_no" column="PROJECT_NO"/>
			<result property="url" column="PROJECT_URL"/>
			<association property="projectManager" javaType="best.gaia.vo.MemberVO" autoMapping="false">
				<id property="mem_no" column="PROJ_MANAGER_NO"/>
				<result property="mem_id" column="PROJ_MANAGER_ID" />
			</association>
			<collection property="issueList" ofType="IssueVO" javaType="java.util.Set" autoMapping="false">
				<id property="issue_sid" column="ISSUE_ID"/>
				<result property="issue_title" column="ISSUE_TITLE" />
				<result property="issue_status" column="ISSUE_STATUS" />
				<result property="url" column="ISSUE_URL"/>
				<association property="label" javaType="java.util.Map" autoMapping="false">
					<result column="LABEL_NO" property="label_no"></result>
					<result column="LABEL_NM" property="label_nm"></result>
				</association>
				<collection property="assigneeList" ofType="MemberVO" javaType="java.util.Set" autoMapping="false">
					<id property="mem_no" column="ASSIGNEE"/>
					<result property="mem_id" column="ASSIGNEE_ID"/>
				</collection>
				<collection property="historyList" ofType="IssueHistoryVO" javaType="java.util.List" autoMapping="false">
					<id property="issue_his_no" column="ISSUE_HIS_NO"/>
					<result property="issue_his_date" column="ISSUE_HIS_DATE"/>
					<result property="issue_his_cont" column="ISSUE_HIS_CONT"/>
					<association property="historyWriter" javaType="best.gaia.vo.MemberVO" autoMapping="false"> 
						<id property="mem_no" column="FIXER_NO"/>
						<result property="mem_id" column="FIXER_ID"/>
						<result property="mem_nick" column="PROJ_USER_NICK"/>
					</association>
				</collection>
			</collection>
		</collection>
	</resultMap>
	
	<select id="selectMemberDetailProject_issue" parameterType="Integer" resultMap="memberMap">
        WITH PROJECTINFO AS (
		    SELECT
		        PROJ_TITLE, PROJECT.PROJ_NO, PROJ_USER_NICK, PROJ_MEM.MEM_NO,
		        MEM_ID AS PROJ_MANAGER_ID, PROJECT.MEM_NO AS PROJ_MANAGER_NO
		    FROM
		        PROJ_MEM
		        INNER JOIN PROJECT ON(PROJ_MEM.PROJ_NO = PROJECT.PROJ_NO)
		        INNER JOIN MEMBER ON(PROJECT.MEM_NO = MEMBER.MEM_NO)
		    ), 
		ISSUEINFO AS (
		    SELECT
		        ISSUE_ASSIGNEE.MEM_NO AS ASSIGNEE_NO, ISSUE.ISSUE_SID, ISSUE.ISSUE_NO, ISSUE.PROJ_NO,
		        ISSUE_HIS_NO, ISSUE_HISTORY.MEM_NO AS FIXER_NO, MEMBER.MEM_ID AS FIXER_ID, 
		        ISSUE_TITLE, ISSUE_HIS_CONT, ISSUE_HIS_DATE, ISSUE.LABEL_NO, LABEL.LABEL_NM
		    FROM
		        ISSUE_ASSIGNEE
		            INNER JOIN ISSUE ON (ISSUE_ASSIGNEE.ISSUE_SID = ISSUE.ISSUE_SID)
		            INNER JOIN ISSUE_HISTORY ON (ISSUE.ISSUE_SID = ISSUE_HISTORY.ISSUE_SID)
		            INNER JOIN MEMBER ON (ISSUE_HISTORY.MEM_NO = MEMBER.MEM_NO)
		            LEFT OUTER JOIN LABEL ON (ISSUE.LABEL_NO = LABEL.LABEL_NO)
		),
		ASSIGNEES AS (
		    SELECT A.ISSUE_SID AS ASSIGNEES_SID, C.MEM_NO AS ASSIGNEE, C.MEM_ID AS ASSIGNEE_ID
		    FROM ISSUE_ASSIGNEE A
		    INNER JOIN MEMBER C ON (A.MEM_NO = C.MEM_NO)
		), 
		MEMSTAT AS (
		    SELECT COM_CODE_GRP, COM_CODE_NM, COM_CODE
		    FROM COM_CODE
		    WHERE COM_CODE_GRP = 'MS'
		)
		SELECT 
		        MEMBER.MEM_NICK, MEMBER.MEM_ID, MEMBER.MEM_NO AS MEM_NO, MEMBER.MEM_BIO,
		        MEMBER.MEM_PIC_FILE_NAME, MEMSTAT.COM_CODE_NM AS MEM_STATUS,
		        PROJECTINFO.PROJ_NO AS PROJECT_NO, PROJ_TITLE, PROJ_MANAGER_NO, PROJ_MANAGER_ID, PROJ_USER_NICK,
		        PROJ_MANAGER_ID||'/'||PROJ_TITLE AS PROJECT_URL, 
		        PROJ_MANAGER_ID||'/'||PROJ_TITLE||'/issue/'||ISSUE_NO AS ISSUE_URL,
		        ISSUE_SID AS ISSUE_ID, ISSUE_TITLE, FIXER_NO, FIXER_ID, ISSUE_HIS_CONT, ISSUE_HIS_DATE, ISSUE_HIS_NO,
		        LABEL_NO, LABEL_NM, ASSIGNEES.ASSIGNEE, ASSIGNEES.ASSIGNEE_ID
		FROM MEMBER
		        LEFT OUTER JOIN PROJECTINFO ON(MEMBER.MEM_NO = PROJECTINFO.MEM_NO)
		        LEFT OUTER JOIN ISSUEINFO ON(PROJECTINFO.PROJ_NO = ISSUEINFO.PROJ_NO AND MEMBER.MEM_NO = ISSUEINFO.ASSIGNEE_NO)
		        LEFT OUTER JOIN ASSIGNEES ON(ISSUEINFO.ISSUE_SID = ASSIGNEES.ASSIGNEES_SID)
		        INNER JOIN MEMSTAT ON(MEMBER.MEM_STATUS = MEMSTAT.COM_CODE)
		WHERE MEMBER.MEM_NO = #{mem_no}
		ORDER BY ISSUE_HIS_NO DESC	
	</select>
	
	<insert id="insertMember" parameterType="MemberVO">
		<selectKey resultType="int" keyProperty="mem_no" order="BEFORE">
			SELECT MEM_SEQ.NEXTVAL
			FROM DUAL
		</selectKey>
		INSERT INTO MEMBER (MEM_NO ,MEM_ID ,MEM_PASS ,MEM_NICK, MEM_SIGN_DATE)
		VALUES(#{mem_no},#{mem_id},#{mem_pass}, #{mem_nick}, SYSDATE)
	</insert>
	
	<update id="updateMember" parameterType="MemberVO">
		UPDATE MEMBER
			SET
		<trim prefixOverrides=",">
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_nick)">
		    , MEM_NICK = #{mem_nick}
		    </if>
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_tel)">
		    , MEM_TEL = #{mem_tel}
		    </if>
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_nm)">
		    , MEM_NM = #{mem_nm}
		    </if>
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_pass)">
		    , MEM_PASS = #{mem_pass}
		    </if>
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_pic_file_name)">
		    , MEM_PIC_FILE_NAME = #{mem_pic_file_name}
		    </if>
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_bio)">
		    , MEM_BIO = #{mem_bio}
		    </if>
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_working_city)">
		    , MEM_WORKING_CITY = #{mem_working_city}
		    </if>
		    <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_status)">
		    , MEM_STATUS = #{mem_status}
		    </if>
	    </trim>
	        WHERE MEM_NO = #{mem_no}
	</update>
	
	
	<update id="deleteMember" parameterType="Integer">
<!-- 		 UPDATE MEMBER -->
<!-- 		 	SET MEM_QUIT_DATE = SYSDATE -->
<!-- 	        WHERE MEM_NO = #{mem_no} -->
	</update>
	
	<select id="selectMemberDetail" parameterType="Integer">
<!-- 		 UPDATE MEMBER -->
<!-- 		 	SET MEM_QUIT_DATE = SYSDATE -->
<!-- 	        WHERE MEM_NO = #{mem_no} -->
	</select>
	
</mapper>