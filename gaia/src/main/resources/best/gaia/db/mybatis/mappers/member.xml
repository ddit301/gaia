<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="best.gaia.member.dao.MemberDao">
	<select id="selectMemberForAuth" parameterType="String" resultType="MemberVO">
		SELECT MEM_NO, MEM_ID, MEM_PASS
		FROM MEMBER                                      
		WHERE MEM_ID = #{mem_id}  AND MEM_QUIT_DATE IS NULL
	</select>
	
	<select id="selectMemberDetail" parameterType="String" resultType="MemberVO">
		SELECT *
		FROM MEMBER
		WHERE MEM_NO = ${mem_no}
	</select>
	
	<resultMap type="best.gaia.vo.MemberVO" id="memberMap" autoMapping="true">
		<id property="mem_no" column="MEM_NO"/>
		<collection property="projectList" ofType="ProjectVO" javaType="java.util.Set" autoMapping="true">
			<id property="proj_no" column="PROJECT_NO"/>
			<association property="projectManager" javaType="best.gaia.vo.MemberVO" autoMapping="false">
				<id property="mem_no" column="PROJ_MANAGER_NO"/>
				<result property="mem_nick" column="PROJ_MANAGER_NICK" />
			</association>
			<collection property="issueList" ofType="IssueVO" javaType="java.util.Set" autoMapping="true">
				<id property="issue_sid" column="ISSUE_ID"/>
				<association property="label" javaType="java.util.Map" autoMapping="false">
					<result column="LABEL_NO" property="label_no"></result>
					<result column="LABEL_NM" property="label_nm"></result>
				</association>
				<collection property="assigneeList" ofType="MemberVO" javaType="java.util.Set" autoMapping="true">
					<id property="mem_no" column="ASSIGNEE"/>
				</collection>
				<collection property="historyList" ofType="IssueHistoryVO" javaType="java.util.List" autoMapping="true">
					<id property="issue_his_no" column="ISSUE_HIS_NO"/>
					<association property="historyWriter" javaType="best.gaia.vo.MemberVO" autoMapping="false"> 
						<id property="mem_no" column="FIXER_NO"/>
						<result property="mem_nick" column="FIXER_NICK"/>
					</association>
				</collection>
			</collection>
		</collection>
	</resultMap>
	
	<select id="selectMemberDetailByNo" parameterType="Integer" resultMap="memberMap">
		WITH PROJECTINFO AS (
		    SELECT
		        PROJ_TITLE, PROJECT.PROJ_NO, PROJ_USER_NICK, PROJ_MEM.MEM_NO,
		        MEM_NICK AS PROJ_MANAGER_NICK, PROJECT.MEM_NO AS PROJ_MANAGER_NO
		    FROM
		        PROJ_MEM
		        INNER JOIN PROJECT ON(PROJ_MEM.PROJ_NO = PROJECT.PROJ_NO)
		        INNER JOIN MEMBER ON(PROJECT.MEM_NO = MEMBER.MEM_NO)
		    ), 
		ISSUEINFO AS (
		    SELECT
		        ISSUE_ASSIGNEE.MEM_NO AS ASSIGNEE, ISSUE.ISSUE_SID, ISSUE.ISSUE_NO,
		        ISSUE_HIS_NO, ISSUE_HISTORY.MEM_NO AS FIXER_NO, MEMBER.MEM_NICK AS FIXER_NICK, 
		        LABEL_NO, PROJ_NO, ISSUE_TITLE, ISSUE_HIS_CONT, ISSUE_HIS_DATE, ISSUE_ASSIGNEE.MEM_NO
		    FROM
		        ISSUE_ASSIGNEE
		            INNER JOIN ISSUE ON (ISSUE_ASSIGNEE.ISSUE_SID = ISSUE.ISSUE_SID)
		            INNER JOIN ISSUE_HISTORY ON (ISSUE.ISSUE_SID = ISSUE_HISTORY.ISSUE_SID)
                    INNER JOIN MEMBER ON (ISSUE_HISTORY.MEM_NO = MEMBER.MEM_NO)
		)
		SELECT 
		        MEM_NICK, MEM_ID, MEMBER.MEM_NO, MEM_BIO,
		        PROJECTINFO.PROJ_NO AS PROJECT_NO, PROJ_TITLE, PROJ_MANAGER_NO, PROJ_MANAGER_NICK,
		        PROJ_MANAGER_NICK||'/'||PROJ_TITLE AS URI,
		        PROJ_MANAGER_NICK||'/'||PROJ_TITLE||'/issue/'||ISSUE_NO AS URL,
		        ISSUE_SID AS ISSUE_ID, 
		        ISSUE_TITLE, FIXER_NO, FIXER_NICK, ASSIGNEE, ISSUE_HIS_CONT, ISSUE_HIS_DATE, ISSUE_HIS_NO
		FROM MEMBER
		        LEFT OUTER JOIN PROJECTINFO ON(MEMBER.MEM_NO = PROJECTINFO.MEM_NO)
		        LEFT OUTER JOIN ISSUEINFO ON(PROJECTINFO.PROJ_NO = ISSUEINFO.PROJ_NO AND MEMBER.MEM_NO = ISSUEINFO.MEM_NO)
		
		WHERE MEMBER.MEM_NO = #{mem_no}
		ORDER BY ISSUE_HIS_NO DESC

	</select>
	
	<insert id="insertMember" parameterType="MemberVO">
		<selectKey resultType="int" keyProperty="mem_no" order="BEFORE">
			SELECT MEM_SEQ.NEXTVAL
			FROM DUAL
		</selectKey>
		INSERT INTO MEMBER (MEM_NO ,MEM_ID ,MEM_PASS ,MEM_NICK, MEM_SIGN_DATE, MEM_STATUS)
		VALUES(#{mem_no},#{mem_id},#{mem_pass}, #{mem_nick}, SYSDATE, 'ACTIVE')
	</insert>
	
	<update id="updateMember" parameterType="MemberVO">
		UPDATE MEMBER
			SET
		<trim prefixOverrides=",">
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_nick)">
		    , MEM_NICK = #{mem_nick}
		    </if>
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_tel)">
		    , mem_tel = #{mem_tel}
		    </if>
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_pic_file_name)">
		    , MEM_PIC_FILE_NAME = #{mem_pic_file_name}
		    </if>
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_nm)">
		    , MEM_NM = #{mem_nm}
		    </if>
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_bio)">
		    , MEM_BIO = #{mem_bio}
		    </if>
		 	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(mem_working_city)">
		    , MEM_WORKING_CITY = #{mem_working_city}
		    </if>
	    </trim>
	        WHERE MEM_NO = #{mem_no}
	</update>
	
	<update id="deleteMember" parameterType="Integer">
<!-- 		 UPDATE MEMBER -->
<!-- 		 	SET MEM_QUIT_DATE = SYSDATE -->
<!-- 	        WHERE MEM_NO = #{mem_no} -->
	</update>
	
</mapper>